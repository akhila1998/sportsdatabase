<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4VkUqVdU7Y+z/9k=
</value>
  </data>
</root>